---
version: 3
vars:
  REPOSITORY_NAME: stuttgart-things
  PROJECT_NAME:
    sh: pwd | grep -o "[^/]*$"
  DATE:
    sh: date +"%y.%m%d.%H%M"
  MODULE: github.com/{{ .REPOSITORY_NAME }}/{{ .PROJECT_NAME }}
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo $(git rev-parse --abbrev-ref HEAD) ; fi
  VERSION:
    sh: git describe --tags --abbrev=0

tasks:

  branch:
    desc: Create branch from main
    cmds:
      - git checkout main
      - git branch
      - git pull
      - |
        echo "Enter to be created (remote) branch:"
        read BRANCH_NAME;
        git checkout -b ${BRANCH_NAME}
        git push origin ${BRANCH_NAME}
      - git branch
      - git branch --set-upstream-to=origin/main ${BRANCH_NAME}

  lint:
    desc: Lint code
    cmds:
      - go mod tidy
      - cmd: golangci-lint run
        ignore_error: true

  test:
    desc: Test code
    cmds:
      - go mod tidy
      - cmd: go test ./... -v

  run:
    desc: Build code
    deps:
      - lint
      - test
    cmds:
      - go mod tidy
      - cmd: go install -ldflags="-X {{ .MODULE }}/cmd.date={{ .DATE }} -X {{ .MODULE }}/cmd.version={{ .VERSION }}-{{ .BRANCH }} -X {{ .MODULE }}/cmd.commit={{ .GIT_COMMIT }}"
      - cmd: "{{ .PROJECT_NAME }}"

  commit:
    desc: Commit + push code into branch
    cmds:
      - git pull
      - |
        echo "ENTER COMMIT MESSAGE"
        read COMMIT_MESSAGE;
        git add cmd/*
        git add .github/workflows/*
        git add modules/*
        git commit -am "$(echo ${COMMIT_MESSAGE})"
        git push origin -u {{ .BRANCH }}

  pr:
    desc: Create pull request into main
    cmds:
      - task: commit
      - gh pr create -t "{{ .BRANCH }}" -b "{{ .BRANCH }} branch into main"

  delete-branch:
    desc: Delete branch from origin
    cmds:
      - git checkout main
      - git branch
      - git pull
      - |
        echo "Enter to be deleted (remote) branch:"
        read BRANCH_NAME;
        git branch -d ${BRANCH_NAME}
        git push origin -d ${BRANCH_NAME}

  tag:
    desc: Commit, push & tag the module
    # deps: [lint, test]
    cmds:
      - rm -rf dist
      - task: commit
      - go mod tidy
      - git pull --tags
      - |
        echo "ENTER TAG"
        read TAG;
      - git tag -a '${TAG}' -m 'updated for tag ${TAG}'
      - git push origin --tags
